{
  "name": "translations",
  "version": "1.0.0",
  "private": true,
  "repository": {
    "type": "git",
    "url": "https://github.com/azdanov/translations.git"
  },
  "scripts": {
    "build": "npx concurrently npm:build:prod npm:build:lambda",
    "build:app": "craco build",
    "build:lambda": "NODE_ENV=production npx netlify-lambda build src/lambda/controllers",
    "build:prod": "run-s build:app sw",
    "check:lint": "eslint src --ext .js,.ts,.tsx",
    "check:types": "tsc",
    "cypress:open": "NODE_ENV=test cypress open",
    "cypress:run": "cypress run",
    "eject": "craco eject",
    "json": "json-server --delay 100 --port 3030 --static src/fixtures/scrape --watch src/fixtures/data.json",
    "semantic-release": "semantic-release",
    "start": "concurrently npm:start:app npm:start:lambda",
    "start:app": "craco start",
    "start:env": "nodenv --env .env.test --exec \"concurrently npm:json npm:start:test\"",
    "start:lambda": "NODE_ENV=development npx netlify-lambda --config tools/webpack.functions.js serve src/lambda/controllers",
    "start:lambda:test": "NODE_ENV=test npx netlify-lambda --config tools/webpack.functions.js serve src/lambda/controllers",
    "start:test": "concurrently npm:start:app npm:start:lambda:test || true",
    "sw": "node tools/modifyServiceWorker.js",
    "test": "concurrently -r -k -s=first npm:start:env npm:test:run",
    "test:run": "NODE_ENV=test npm-run-all wait --parallel cypress:run unit:no-watch",
    "unit": "craco test",
    "unit:no-watch": "craco test --no-watch",
    "wait": "concurrently npm:wait:*",
    "wait:app": "wait-on http://localhost:3000",
    "wait:json": "wait-on http://localhost:3030/car",
    "wait:lambda": "wait-on http://localhost:9000/.netlify/functions/translate/en/car"
  },
  "husky": {
    "hooks": {
      "pre-commit": "lint-staged"
    }
  },
  "lint-staged": {
    "*.{html,css,json,yml,yaml,json,md}": [
      "prettier --write",
      "git add"
    ],
    "*.{js}": [
      "prettier --write",
      "eslint --fix",
      "git add"
    ],
    "*.{ts,tsx}": [
      "prettier --write",
      "eslint --fix",
      "git add"
    ]
  },
  "browserslist": [
    ">0.2%",
    "not dead",
    "not ie <= 11",
    "not op_mini all"
  ],
  "prettier": {
    "printWidth": 88,
    "semi": false,
    "singleQuote": true,
    "trailingComma": "all"
  },
  "eslintConfig": {
    "env": {
      "browser": true,
      "es6": true,
      "jest": true
    },
    "extends": [
      "airbnb",
      "react-app",
      "plugin:lodash/recommended",
      "plugin:jest/recommended",
      "plugin:unicorn/recommended",
      "plugin:@typescript-eslint/recommended",
      "plugin:prettier/recommended",
      "prettier/@typescript-eslint",
      "prettier/react",
      "prettier/unicorn"
    ],
    "parser": "@typescript-eslint/parser",
    "parserOptions": {
      "ecmaFeatures": {
        "jsx": true
      },
      "ecmaVersion": 2018,
      "project": "./tsconfig.json",
      "sourceType": "module"
    },
    "plugins": [
      "@typescript-eslint",
      "jest",
      "unicorn",
      "lodash",
      "react-hooks"
    ],
    "root": true,
    "rules": {
      "import/prefer-default-export": "off",
      "spaced-comment": [
        "error",
        "always",
        {
          "line": {
            "markers": [
              "/"
            ],
            "exceptions": [
              "-",
              "+"
            ]
          },
          "block": {
            "markers": [
              "!"
            ],
            "exceptions": [
              "*"
            ],
            "balanced": true
          }
        }
      ],
      "@typescript-eslint/no-use-before-define": "off",
      "jest/consistent-test-it": [
        "error"
      ],
      "jest/lowercase-name": [
        "error"
      ],
      "no-shadow": "off",
      "jest/no-test-return-statement": "error",
      "jest/prefer-spy-on": "error",
      "jest/prefer-to-be-null": "error",
      "jest/prefer-to-be-undefined": "error",
      "jest/prefer-to-contain": "error",
      "jest/prefer-to-have-length": "error",
      "jest/prefer-todo": "error",
      "jest/require-tothrow-message": "error",
      "lodash/import-scope": [
        "error",
        "member"
      ],
      "one-var": "off",
      "lodash/prefer-lodash-method": "off",
      "no-param-reassign": "off",
      "no-underscore-dangle": "off",
      "no-use-before-define": "off",
      "react-hooks/rules-of-hooks": "error",
      "react/jsx-filename-extension": [
        "warn",
        {
          "extensions": [
            ".tsx",
            ".jsx"
          ]
        }
      ],
      "react/prop-types": "off",
      "unicorn/filename-case": "off",
      "padding-line-between-statements": [
        "error",
        {
          "blankLine": "always",
          "prev": [
            "block",
            "block-like",
            "cjs-export",
            "class",
            "export",
            "import"
          ],
          "next": "*"
        },
        {
          "blankLine": "any",
          "prev": [
            "export",
            "import"
          ],
          "next": [
            "export",
            "import"
          ]
        }
      ]
    },
    "settings": {
      "import/resolver": {
        "node": {
          "extensions": [
            ".js",
            ".jsx",
            ".ts",
            ".tsx"
          ]
        }
      }
    }
  },
  "dependencies": {
    "@craco/craco": "5.0.2",
    "@reach/menu-button": "0.1.12",
    "@reach/visually-hidden": "0.1.3",
    "abortcontroller-polyfill": "1.3.0",
    "aws-lambda": "0.1.2",
    "fomantic-ui-css": "2.7.4",
    "got": "9.6.0",
    "history": "4.9.0",
    "http-errors": "1.7.2",
    "http-proxy-middleware": "0.19.1",
    "i18next": "15.0.9",
    "i18next-browser-languagedetector": "3.0.1",
    "lodash": "4.17.11",
    "lscache": "1.3.0",
    "match-sorter": "3.0.0",
    "middy": "0.25.0",
    "node-sass": "4.11.0",
    "p-settle": "3.1.0",
    "react": "16.8.6",
    "react-dom": "16.8.6",
    "react-i18next": "10.8.1",
    "react-router-dom": "5.0.0",
    "react-scripts": "2.1.8",
    "scrape-it": "5.1.4",
    "tough-cookie": "3.0.1",
    "typescript": "3.4.4"
  },
  "devDependencies": {
    "@semantic-release/changelog": "3.0.2",
    "@semantic-release/git": "7.0.8",
    "@semantic-release/github": "5.2.10",
    "@types/aws-lambda": "8.10.24",
    "@types/got": "9.4.3",
    "@types/http-errors": "1.6.1",
    "@types/http-proxy-middleware": "0.19.2",
    "@types/i18next": "12.1.0",
    "@types/i18next-browser-languagedetector": "3.0.0",
    "@types/jest": "24.0.11",
    "@types/lodash": "4.14.123",
    "@types/lscache": "1.0.29",
    "@types/match-sorter": "2.3.0",
    "@types/node": "11.13.7",
    "@types/p-settle": "2.0.1",
    "@types/react": "16.8.14",
    "@types/react-dom": "16.8.4",
    "@types/react-router-dom": "4.3.2",
    "@typescript-eslint/eslint-plugin": "1.7.0",
    "@typescript-eslint/parser": "1.7.0",
    "babel-plugin-lodash": "3.3.4",
    "babel-preset-react-app": "8.0.0",
    "concurrently": "4.1.0",
    "cypress": "3.2.0",
    "dotenv-webpack": "1.7.0",
    "eslint": "5.12.0",
    "eslint-config-airbnb": "17.1.0",
    "eslint-config-prettier": "4.1.0",
    "eslint-plugin-cypress": "2.2.1",
    "eslint-plugin-import": "2.17.2",
    "eslint-plugin-jest": "22.4.1",
    "eslint-plugin-jsx-a11y": "6.2.1",
    "eslint-plugin-lodash": "5.1.0",
    "eslint-plugin-prettier": "3.0.1",
    "eslint-plugin-react": "7.12.4",
    "eslint-plugin-react-hooks": "1.6.0",
    "eslint-plugin-unicorn": "8.0.2",
    "glob-all": "3.1.0",
    "husky": "1.3.1",
    "jest-dom": "3.1.3",
    "json-server": "0.14.2",
    "lint-staged": "8.1.5",
    "lodash-webpack-plugin": "0.11.5",
    "netlify-lambda": "1.4.5",
    "node-env-run": "3.0.2",
    "npm-run-all": "4.1.5",
    "prerender-spa-plugin": "3.4.0",
    "prettier": "1.17.0",
    "purgecss-webpack-plugin": "1.5.0",
    "react-testing-library": "6.1.2",
    "semantic-release": "15.13.3",
    "wait-on": "3.2.0",
    "webpack-bundle-analyzer": "3.2.0"
  },
  "engines": {
    "node": ">=10"
  },
  "release": {
    "verifyConditions": [
      "@semantic-release/changelog",
      "@semantic-release/git",
      "@semantic-release/github"
    ],
    "prepare": [
      "@semantic-release/changelog",
      "@semantic-release/git"
    ],
    "success": [
      "@semantic-release/github"
    ],
    "npmPublish": false,
    "branch": "master"
  }
}
